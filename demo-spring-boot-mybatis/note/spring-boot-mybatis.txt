
启动：

org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration
    - org.mybatis.spring.boot.autoconfigure.MybatisProperties
    -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.AutoConfiguredMapperScannerRegistrar.registerBeanDefinitions
        -> org.mybatis.spring.mapper.MapperScannerConfigurer.postProcessBeanDefinitionRegistry
            -> org.mybatis.spring.mapper.ClassPathMapperScanner.ClassPathMapperScanner
                -> org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters
            -> org.mybatis.spring.mapper.ClassPathMapperScanner.registerFilters *
            -> org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan
                -> org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan (被覆盖了)
                -> org.mybatis.spring.mapper.ClassPathMapperScanner.doScan (覆盖)
                    -> org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions

    -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.MybatisAutoConfiguration
    -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration#afterPropertiesSet
        -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.checkConfigFileExists
    -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration#sqlSessionFactory
        -> org.mybatis.spring.SqlSessionFactoryBean
        -> org.mybatis.spring.SqlSessionFactoryBean#getObject
            -> org.mybatis.spring.SqlSessionFactoryBean#afterPropertiesSet
                -> org.mybatis.spring.SqlSessionFactoryBean#buildSqlSessionFactory
                    -> org.apache.ibatis.builder.xml.XMLMapperBuilder#XMLMapperBuilder(java.io.InputStream, org.apache.ibatis.session.Configuration, java.lang.String, java.util.Map<java.lang.String,org.apache.ibatis.parsing.XNode>)
                    -> org.apache.ibatis.builder.xml.XMLMapperBuilder#parse
                        -> org.apache.ibatis.builder.xml.XMLMapperBuilder#bindMapperForNamespace
                        -> org.apache.ibatis.builder.xml.XMLMapperBuilder#parsePendingResultMaps
                        -> org.apache.ibatis.builder.xml.XMLMapperBuilder#parsePendingCacheRefs
                        -> org.apache.ibatis.builder.xml.XMLMapperBuilder#parsePendingStatements
                            -> org.apache.ibatis.builder.xml.XMLMapperBuilder.parsePendingStatements
                                -> org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode
    -> org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration#sqlSessionTemplate
        - org.apache.ibatis.session.ExecutorType
        -> org.mybatis.spring.SqlSessionTemplate#SqlSessionTemplate(org.apache.ibatis.session.SqlSessionFactory)
            -> org.mybatis.spring.SqlSessionTemplate#SqlSessionTemplate(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType)
                -> org.mybatis.spring.SqlSessionTemplate#SqlSessionTemplate(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType, org.springframework.dao.support.PersistenceExceptionTranslator)

                    this.sqlSessionProxy = (SqlSession) newProxyInstance(SqlSessionFactory.class.getClassLoader(),
                    new Class[] { SqlSession.class }, new SqlSessionInterceptor());