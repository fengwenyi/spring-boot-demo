spring:
  jpa:
    show-sql: true
    hibernate:
      #      ddl-auto: none
      ddl-auto: update
    properties:
      hibernate.show_sql: true
      hibernate.format_sql: true
    open-in-view: false

#  shardingsphere:
#    datasource:
#      names: demo-sharding-ds0,demo-sharding-ds1
#      demo-sharding-ds0:
#        type: org.apache.commons.dbcp2.BasicDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo-sharding-ds0
#        username: root
#        password: 123456

spring.shardingsphere.datasource.names: demo-sharding-ds0,demo-sharding-ds1

spring.shardingsphere.datasource.demo-sharding-ds0.type: org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.demo-sharding-ds0.driver-class-name: com.mysql.jdbc.Driver
spring.shardingsphere.datasource.demo-sharding-ds0.url: jdbc:mysql://localhost:3306/demo-sharding-ds0
spring.shardingsphere.datasource.demo-sharding-ds0.username: root
spring.shardingsphere.datasource.demo-sharding-ds0.password: 123456

spring.shardingsphere.datasource.demo-sharding-ds1.type: org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.demo-sharding-ds1.driver-class-name: com.mysql.jdbc.Driver
spring.shardingsphere.datasource.demo-sharding-ds1.url: jdbc:mysql://localhost:3306/demo-sharding-ds1
spring.shardingsphere.datasource.demo-sharding-ds1.username: root
spring.shardingsphere.datasource.demo-sharding-ds1.password: 123456

spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column: user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression: demo-sharding-ds$->{user_id % 2}

spring.shardingsphere.sharding.tables.t_order.actual-data-nodes: demo-sharding-ds$->{0..1}.t_order$->{0..1}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column: user_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression: t_order$->{goods_id % 2}